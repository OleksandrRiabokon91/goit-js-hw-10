{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stateInputs = form.querySelectorAll('input[name=\"state\"]');\n\n// Функция для отображения уведомления об ошибке\nfunction showErrorMessage(message) {\n  iziToast.warning({\n    title: '⚠ Warning',\n    message: message,\n    position: 'topRight',\n  });\n}\n\nfunction showSuccessMessage(delay) {\n  iziToast.success({\n    title: '✅ Success',\n    message: `Fulfilled promise in ${delay}ms`,\n    position: 'topRight',\n  });\n}\n\nfunction showFailureMessage(delay) {\n  iziToast.error({\n    title: '❌ Error',\n    message: `Rejected promise in ${delay}ms`,\n    position: 'topRight',\n  });\n}\n\n// Функция для проверки введенной задержки\nfunction validateDelay(delay, callback) {\n  if (!delay || delay <= 0) {\n    callback('Please enter a valid delay in milliseconds.');\n    return false;\n  }\n  return true;\n}\n\n// Функция для проверки выбранного состояния\nfunction validateState(state, callback) {\n  if (!state) {\n    callback('Please select a promise state (fulfilled or rejected)');\n    return false;\n  }\n  return true;\n}\n\n// Функция для создания промиса с заданной задержкой и состоянием\nfunction createPromise(delay, state, callback) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  })\n    .then(delay => {\n      callback(showSuccessMessage, delay);\n    })\n    .catch(delay => {\n      callback(showFailureMessage, delay);\n    });\n}\n\n// Функция для очистки формы\nfunction clearForm() {\n  delayInput.value = '';\n  stateInputs.forEach(input => (input.checked = false));\n}\n\n// Основной обработчик отправки формы\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = Number(delayInput.value);\n  const state = [...stateInputs].find(input => input.checked)?.value;\n  clearForm();\n  if (!validateDelay(delay, showErrorMessage)) return;\n  if (!validateState(state, showErrorMessage)) return;\n  createPromise(delay, state, (callback, delay) => callback(delay));\n});\n"],"names":["form","delayInput","stateInputs","showErrorMessage","message","iziToast","showSuccessMessage","delay","showFailureMessage","validateDelay","callback","validateState","state","createPromise","resolve","reject","clearForm","input","event","_a"],"mappings":"wIAGA,MAAMA,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAcF,EAAK,iBAAiB,qBAAqB,EAG/D,SAASG,EAAiBC,EAAS,CACjCC,EAAS,QAAQ,CACf,MAAO,YACP,QAASD,EACT,SAAU,UACd,CAAG,CACH,CAEA,SAASE,EAAmBC,EAAO,CACjCF,EAAS,QAAQ,CACf,MAAO,YACP,QAAS,wBAAwBE,CAAK,KACtC,SAAU,UACd,CAAG,CACH,CAEA,SAASC,EAAmBD,EAAO,CACjCF,EAAS,MAAM,CACb,MAAO,UACP,QAAS,uBAAuBE,CAAK,KACrC,SAAU,UACd,CAAG,CACH,CAGA,SAASE,EAAcF,EAAOG,EAAU,CACtC,MAAI,CAACH,GAASA,GAAS,GACrBG,EAAS,6CAA6C,EAC/C,IAEF,EACT,CAGA,SAASC,EAAcC,EAAOF,EAAU,CACtC,OAAKE,EAIE,IAHLF,EAAS,uDAAuD,EACzD,GAGX,CAGA,SAASG,EAAcN,EAAOK,EAAOF,EAAU,CAC7C,OAAO,IAAI,QAAQ,CAACI,EAASC,IAAW,CACtC,WAAW,IAAM,CACXH,IAAU,YACZE,EAAQP,CAAK,EAEbQ,EAAOR,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EACE,KAAKA,GAAS,CACbG,EAASJ,EAAoBC,CAAK,CACxC,CAAK,EACA,MAAMA,GAAS,CACdG,EAASF,EAAoBD,CAAK,CACxC,CAAK,CACL,CAGA,SAASS,GAAY,CACnBf,EAAW,MAAQ,GACnBC,EAAY,QAAQe,GAAUA,EAAM,QAAU,EAAM,CACtD,CAGAjB,EAAK,iBAAiB,SAAUkB,GAAS,OACvCA,EAAM,eAAc,EACpB,MAAMX,EAAQ,OAAON,EAAW,KAAK,EAC/BW,GAAQO,EAAA,CAAC,GAAGjB,CAAW,EAAE,KAAKe,GAASA,EAAM,OAAO,IAA5C,YAAAE,EAA+C,MAC7DH,IACKP,EAAcF,EAAOJ,CAAgB,GACrCQ,EAAcC,EAAOT,CAAgB,GAC1CU,EAAcN,EAAOK,EAAO,CAACF,EAAUH,IAAUG,EAASH,CAAK,CAAC,CAClE,CAAC"}